<?php

namespace Tests\Feature;

use App\Events\LessonWatched;
use App\Models\Achievement;
use App\Models\Lesson;
use App\Models\User;
use Database\Seeders\DatabaseSeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class LessonTest extends TestCase
{
    use RefreshDatabase;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->seed(DatabaseSeeder::class);
    }

    public function test_unlocks_achievement_when_user_writes_watches_first_lesson(): void
    {

        $user = User::find(1);
        $lesson_id = Lesson::find(1);
        $user->lessons()->attach($lesson_id, [
            'watched' => true
        ]);
        event(new LessonWatched($user));

        $achievement = Achievement::query()
            ->where('type', 'lesson')
            ->where('count', 1)->first();

        $user_achievement = $user->achievements()->latest()->first();

        $this->assertEquals($user_achievement->id, $achievement->id);

    }
}
